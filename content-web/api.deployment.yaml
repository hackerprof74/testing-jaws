apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"api"},"name":"api","namespace":"ingress-demo"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"api"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"api"},"name":"api"},"spec":{"containers":[{"env":[{"name":"MONGODB_CONNECTION","valueFrom":{"secretKeyRef":{"key":"db","name":"cosmosdb"}}}],"image":"fabmedical766215.azurecr.io/content-api","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/","port":3001},"initialDelaySeconds":30,"periodSeconds":20,"timeoutSeconds":10},"name":"api","ports":[{"containerPort":3001,"hostPort":3004,"protocol":"TCP"}],"resources":{"requests":{"cpu":"100m","memory":"128Mi"}},"securityContext":{"privileged":false},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}}}
  creationTimestamp: "2022-10-18T06:21:34Z"
  generation: 8
  labels:
    app: api
  name: api
  namespace: ingress-demo
  resourceVersion: "59993"
  uid: 14e72b38-8e08-404a-8f7b-dfcca2bf1a78
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: api
      name: api
    spec:
      containers:
      - env:
        - name: MONGODB_CONNECTION
          valueFrom:
            secretKeyRef:
              key: db
              name: cosmosdb
        image: fabmedical766215.azurecr.io/content-api
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3001
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        name: api
        ports:
        - containerPort: 3001
          hostPort: 3004
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  conditions:
  - lastTransitionTime: "2022-10-18T06:50:27Z"
    lastUpdateTime: "2022-10-18T06:50:27Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-10-18T06:21:35Z"
    lastUpdateTime: "2022-10-18T06:52:10Z"
    message: ReplicaSet "api-674dd45b8d" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 8
  readyReplicas: 3
  replicas: 3
  updatedReplicas: 3
